# vim:ft=ansible:
---

- name: Install plugins without a specific version
  jenkins_plugin:
    name: "{{ item.key }}"
    url: "{{ jenkins_params.url }}"
    url_username: "{{ jenkins_admin_username }}"
    url_password: "{{ jenkins_admin_password }}"
    timeout: 300
  register: my_jenkins_plugin_unversioned
  when: >
    'version' not in item.value
  with_dict: "{{ my_jenkins_plugins }}"

- name: Install plugins with a specific version
  jenkins_plugin:
    name: "{{ item.key }}"
    version: "{{ item.value['version'] }}"
    url: "{{ jenkins_params.url }}"
    url_username: "{{ jenkins_admin_username }}"
    url_password: "{{ jenkins_admin_password }}"
    timeout: 300
  register: my_jenkins_plugin_versioned
  when: >
    'version' in item.value
  with_dict: "{{ my_jenkins_plugins }}"

- name: Initiate the fact
  set_fact:
    jenkins_restart_required: no

- name: Check if restart is required by any of the versioned plugins
  set_fact:
    jenkins_restart_required: yes
  when: item.changed
  with_items: "{{ my_jenkins_plugin_versioned.results }}"

- name: Check if restart is required by any of the unversioned plugins
  set_fact:
    jenkins_restart_required: yes
  when: item.changed
  with_items: "{{ my_jenkins_plugin_unversioned.results }}"

- name: Restart Jenkins if required
  service:
    name: jenkins
    state: restarted
  when: jenkins_restart_required

- name: Wait for Jenkins to start up
  uri:
    url: "http://localhost:{{ jenkins_http_port }}/login"
    status_code: 200
    timeout: 5
  register: jenkins_service_status
  # Keep trying for 5 mins in 5 sec intervals
  retries: 60
  delay: 5
  until: >
     'status' in jenkins_service_status and
     jenkins_service_status['status'] == 200
  when: jenkins_restart_required

- name: Reset the fact
  set_fact:
    jenkins_restart_required: no
  when: jenkins_restart_required

- name: Plugin enabling
  jenkins_plugin:
    name: "{{ item.key }}"
    state: "{{ 'enabled' if item.value['enabled'] else 'disabled'}}"
    url: "{{ jenkins_params.url }}"
    url_username: "{{ jenkins_admin_username }}"
    url_password: "{{ jenkins_admin_password }}"
  when: >
    'enabled' in item.value
  with_dict: "{{ my_jenkins_plugins }}"
